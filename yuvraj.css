/* Import main theme variables by linking style.css in HTML */

/* Basic page styling to match the theme */
body {
    background-color: var(--body-bg);
    color: var(--body-text);
    font-family: "Roboto", sans-serif;
    text-align: center;
    padding: 2rem;
    transition: background-color 0.5s ease, color 0.5s ease;
}

/* Dark theme overrides */
body.dark-theme {
    background-color: var(--body-bg-dark);
    color: var(--body-text-dark);
}

.profile-img {
    width: 200px;
    height: 200px;
    border-radius: 50%;
    border: 3px solid var(--body-text);
    object-fit: cover; /* Ensures the image covers the area without distortion */
    margin: 1rem 0;
}

body.dark-theme .profile-img {
    border-color: var(--body-text-dark);
}

/* --- Marquee Container --- */
/* This is the viewport for our scrolling text. */
.marquee-container {
    width: 100%;
    overflow: hidden; /* Hides the text that is outside the container */
    box-sizing: border-box;
    background: var(--footer-bg);
    padding: 1rem 0;
    border-radius: 10px;
    margin: 2rem 0;
    box-shadow: 0 4px 15px var(--header-shadow);
}

body.dark-theme .marquee-container {
    background: var(--footer-bg-dark);
    box-shadow: 0 4px 15px var(--header-shadow-dark);
}

/* --- Marquee Content --- */
/* This is the element that will actually move. */
.marquee-content {
    display: flex; /* Use flexbox to keep items side-by-side */
    width: fit-content; /* Let the container be as wide as its content */
    animation: marquee-kf 20s linear infinite;
}

.marquee-content h1,
.marquee-content h2,
.marquee-content h3 {
    margin: 0;
    padding: 0 2rem; /* Add spacing between duplicated text */
    white-space: nowrap; /* Ensure h1 content doesn't wrap */
}

.marquee-content h1 {
    font-size: 2rem;
}
.marquee-content h2 {
    font-size: 1.75rem;
}
.marquee-content h3 {
    font-size: 1.5rem;
}

/* --- Keyframes for the Animation --- */
@keyframes marquee-kf {
    from {
        transform: translateX(0%);
    }
    to {
        /* Move the content to the left by half of its total width.
           Since the content is duplicated, this creates a seamless loop. */
        transform: translateX(-50%);
    }
}